#include EAstdlib.event

#ifndef InlineEvents
  #define ChName_DefaultChapterOffset 0x01000000
  PUSH
  ORG ChName_DefaultChapterOffset
#endif

#define ChName_ID 0x06
EventPointerTable(ChName_ID, ChName_ThisChapter)

ChName_ThisChapter:

POIN ChName_TurnBasedEvents
POIN ChName_CharacterBasedEvents
POIN ChName_LocationBasedEvents
POIN ChName_MiscBasedEvents
POIN ChName_Dunno ChName_Dunno ChName_Dunno
POIN ChName_Tutorial
POIN ChName_Ballista1 ChName_Ballista2
POIN ChName_Units1 ChName_Units1
POIN $0 $0 $0 $0 $0 $0
POIN ChName_BeginningScene ChName_EndingScene

ChName_TurnBasedEvents:
TurnEventPlayer(0x0,EventAfterExitingPrepScreen,1)
TURN

ChName_CharacterBasedEvents:
CharacterEvent(0x7,EphRecruit,Eirika,Ephraim)
CharacterEvent(0x8,FordeRecruit,Eirika,Forde)
CHAR

ChName_LocationBasedEvents:
LOCA

ChName_MiscBasedEvents:
CauseGameOverIfLordDies
//Add Win Condition
AFEV

ChName_Dunno:
END_MAIN

ChName_Tutorial:
END_MAIN

ChName_Ballista1:
BLST

ChName_Ballista2:
BLST
ALIGN 4

ASSHATS:
UNIT Saar Pirate 0x00 Level(9, Enemy, 0) [17,2] 0x02 0x00 0x00 0x00 [SteelAxe, HandAxe, EnergyRing] GuardAI
UNIT 0x80 Myrmidon 0x0 Level(5, Enemy, 1) [17, 6] 0x00 0x00 0x00 0x00 [IronSword] AttackInRangeAI
UNIT 0x80 Myrmidon 0x0 Level(6, Enemy, 1) [18, 9] 0x00 0x00 0x00 0x00 [SteelSword] AttackInRangeAI
UNIT 0x80 Myrmidon 0x0 Level(5, Enemy, 1) [7, 11] 0x00 0x00 0x00 0x00 [IronSword] PursueWithoutHeedAI
UNIT 0x80 PegasusKnight 0x0 Level(5, Enemy, 1) [12, 12] 0x00 0x00 0x00 0x00 [SlimLance] PursueWithoutHeedAI
UNIT 0x80 Pirate 0x0 Level(5, Enemy, 1) [8, 22] 0x00 0x00 0x00 0x00 [IronAxe] AttackInRangeAI
UNIT 0x80 Archer 0x0_F Level(6, Enemy, 1) [16, 6] 0x00 0x00 0x00 0x00 [IronBow] AttackInRangeAI
UNIT 0x80 Mage 0x0 Level(5, Enemy, 1) [10, 18] 0x00 0x00 0x00 0x00 [Thunder] AttackInRangeAI
UNIT 0x80 Mage 0x0 Level(5, Enemy, 1) [8, 20] 0x00 0x00 0x00 0x00 [Thunder] AttackInRangeAI
UNIT 0x80 Mage_F 0x0 Level(6, Enemy, 1) [4, 20] 0x00 0x00 0x00 0x00 [Fire] AttackInRangeAI
UNIT 0x80 Pirate 0x0 Level(5, Enemy, 1) [7, 16] 0x00 0x00 0x00 0x00 [HandAxe] AttackInRangeAI
UNIT 0x80 Archer 0x0 Level(6, Enemy, 1) [11, 19] 0x00 0x00 0x00 0x00 [Longbow, SteelBow] AttackInRangeAI
UNIT 0x80 Myrmidon 0x0 Level(5, Enemy, 1) [10, 7] 0x00 0x00 0x00 0x00 [IronSword] AttackInRangeAI
UNIT 0x80 Myrmidon_F 0x0 Level(6, Enemy, 1) [6, 9] 0x00 0x00 0x00 0x00 [IronSword] AttackInRangeAI
UNIT 0x80 Cavalier_F 0x0 Level(5, Enemy, 1) [5, 14] 0x00 0x00 0x00 0x00 [Steel Sword, Javelin] PursueWithoutHeedAI
UNIT 0x80 Cavalier 0x0 Level(6, Enemy, 1) [7, 14] 0x02 0x00 0x00 0x00 [SteelLance, WindSword] PursueWithoutHeedAI
UNIT Ephraim AxeCav 0x0 Level(5, Enemy, 0) [6, 13] 0x00 0x00 0x00 0x00 [DevilAxe, HandAxe] PursueWithoutHeedAI
UNIT Forde Fighter 0x0 Level(5, Enemy, 0) [13, 16] 0x00 0x00 0x00 0x00 [KillerAxe] PursueWithoutHeedAI
UNIT 0x80 Mercenary 0x0 Level(6, Enemy, 1) [17, 17] 0x00 0x00 0x00 0x00 [IronBlade] AttackInRangeAI
UNIT 0x80 Mage_F 0x0 Level(6, Enemy, 1) [14, 19] 0x00 0x00 0x00 0x00 [Thunder] AttackInRangeAI
UNIT 0x80 WyvernRider 0x0 Level(6, Enemy, 1) [11, 11] 0x02 0x00 0x00 0x00 [SteelLance, Spear, Elixir] PursueWithoutHeedAI
UNIT 0x80 Pirate 0x0 Level(5, Enemy, 1) [12, 21] 0x00 0x00 0x00 0x00 [IronAxe] AttackInRangeAI
UNIT 0x80 Shaman 0x0 Level(6, Enemy, 1) [13, 22] 0x00 0x00 0x00 0x00 [Flux] PursueWithoutHeedAI
UNIT

GOODBOIS:
UNIT Eirika Lord_F 0x0 Level(1, Ally, 0) [19, 20] 0x00 0x00 0x00 0x00 NoAI
UNIT Seth Paladin 0x0 Level(10, Ally, 0) [18, 19] 0x00 0x00 0x00 0x00 NoAI
UNIT Seth Paladin 0x0 Level(10, Ally, 0) [21, 20] 0x00 0x00 0x00 0x00 NoAI
UNIT Seth Paladin 0x0 Level(10, Ally, 0) [20, 21] 0x00 0x00 0x00 0x00 NoAI
UNIT Seth Paladin 0x0 Level(10, Ally, 0) [21, 22] 0x00 0x00 0x00 0x00 NoAI
UNIT Seth Paladin 0x0 Level(10, Ally, 0) [22, 21] 0x00 0x00 0x00 0x00 NoAI
UNIT Seth Paladin 0x0 Level(10, Ally, 0) [20, 23] 0x00 0x00 0x00 0x00 NoAI

ChName_BeginningScene:
FADU 0x8
LOAD1 ASSHATS
ENUN
LOAD1 GOODBOIS
ENUN
ENDB


ChName_EndingScene:
MNC2 0x07
ENDA

// Events
EphRecruit:
TurnAlly(Ephraim)
ENDA

FordeRecruit:
TurnAlly(Forde)
ENDA

#ifndef InlineEvents
  MESSAGE Events end at offset CURRENTOFFSET
  POP
#endif